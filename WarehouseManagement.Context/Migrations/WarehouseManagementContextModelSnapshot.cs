// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WarehouseManagement.Context;

#nullable disable

namespace WarehouseManagement.Context.Migrations
{
    [DbContext(typeof(WarehouseManagementContext))]
    partial class WarehouseManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Description")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Title")
                        .IsUnique()
                        .HasDatabaseName("Product_Title")
                        .HasFilter("DeletedAt is null");

                    b.ToTable("Products", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.Warehouse", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("Address")
                        .IsUnique()
                        .HasDatabaseName("Warehouse_Address")
                        .HasFilter("DeletedAt is null");

                    b.ToTable("Warehouses", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.WarehouseUnit", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTimeOffset?>("DeletedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTimeOffset>("UpdatedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("UpdatedBy")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("WarehouseUnits", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.WarehouseWarehouseUnit", b =>
                {
                    b.Property<Guid>("WarehouseId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("WarehouseUnitId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("WarehouseId", "WarehouseUnitId");

                    b.HasIndex("WarehouseUnitId");

                    b.ToTable("WarehouseWarehouseUnits", (string)null);
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.WarehouseUnit", b =>
                {
                    b.HasOne("WarehouseManagement.Context.Contracts.Models.Product", "Product")
                        .WithMany("WarehouseUnits")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.WarehouseWarehouseUnit", b =>
                {
                    b.HasOne("WarehouseManagement.Context.Contracts.Models.Warehouse", "Warehouse")
                        .WithMany("WarehouseWarehouseUnits")
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WarehouseManagement.Context.Contracts.Models.WarehouseUnit", "WarehouseUnit")
                        .WithMany("WarehouseWarehouseUnits")
                        .HasForeignKey("WarehouseUnitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Warehouse");

                    b.Navigation("WarehouseUnit");
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.Product", b =>
                {
                    b.Navigation("WarehouseUnits");
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.Warehouse", b =>
                {
                    b.Navigation("WarehouseWarehouseUnits");
                });

            modelBuilder.Entity("WarehouseManagement.Context.Contracts.Models.WarehouseUnit", b =>
                {
                    b.Navigation("WarehouseWarehouseUnits");
                });
#pragma warning restore 612, 618
        }
    }
}
